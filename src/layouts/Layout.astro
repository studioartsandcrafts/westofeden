---
import Footer from "../components/Footer.astro";

interface Props {
  title: string;
  colors?: {
    fg?: string;
    bg?: string;
  };
}

const { title, colors } = Astro.props;

//  the extra lines at the bottom is because you need to redefine variables for it take affect ..?
// doesnt cascade it seems
const colorfg = colors?.fg ? `--c-light: ${colors.fg};` : "";
const colorbg = colors?.bg ? `--c-dark: ${colors.bg};` : "";
const colorsStyles = colorfg + colorbg;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body style={colorsStyles}>
    <slot />
    <Footer />
  </body>
</html>
<style is:global lang="postcss">
  @font-face {
    font-family: "Charter";
    src: local("Charter"), 
      url("/fonts/charter_regular.woff2");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }
  @font-face {
    font-family: "Charter";
    src: local("Charter italic"), 
      url("/fonts/charter_italic.woff2");
    font-weight: normal;
    font-style: italic;
    font-display: swap;
  }
  @font-face {
    font-family: "Archivo Narrow";
    src: local("Archivo Narrow"), 
      url("/fonts/ArchivoNarrow-SemiBold.woff2");
    font-display: swap;
  }
  p,h1,h2,h3,h4 {
    @apply tracking-tight;
  }
  :root {
    --c-light: #F4F4F4;
    --c-dark: #423229;

    /* // abstraction to allow flipping colors */
    --c-bg: var(--c-light);
    --c-fg: var(--c-dark);
  }

  body {
    --c-bg: var(--c-light); 
    --c-fg: var(--c-dark);
    @apply bg-bg text-fg font-sans;
    scroll-behavior: smooth;
  }
</style>
