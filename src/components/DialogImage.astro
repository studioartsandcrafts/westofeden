<dialog class="imageviewer">
  <button
    type="button"
    class="p-2 text-center hover:text-bg hover:bg-fg border-b-2 border-fg w-full text-fg"
    >close image</button
  >
  <div class="img-wrapper-dialog">
    <div class="loader"></div>
    <slot />
  </div>
</dialog>
<script>
  // Find all buttons with the `alert` class on the page.
  const buttons = document.querySelectorAll(
    "button.imageviewer-btn"
  ) as NodeListOf<HTMLButtonElement>;
  const dialog = document.querySelector(
    "dialog.imageviewer"
  ) as HTMLDialogElement;
  const img = dialog.querySelector(
    "dialog.imageviewer img"
  ) as HTMLImageElement;
  // Handle clicks on each button.
  buttons.forEach((button) => {
    button.addEventListener("click", () => {
      const imgSrc = button.querySelector("img") as HTMLImageElement;
      const src = imgSrc.getAttribute("data-src");
      const alt = imgSrc.getAttribute("data-src-alt");
      const size = imgSrc.getAttribute("data-src-size");
      console.log(src, alt);
      if (!dialog || !src || !alt) return;
      img.src = src ? src : "";
      img.alt = alt ? alt : "";
      if (size) {
        img.width = parseInt(size.split(",")[0]);
        img.height = parseInt(size.split(",")[1]);
      }
      img.addEventListener("load", () => {
        const loader = dialog.querySelector(".img-wrapper-dialog .loader");
        loader?.classList.add("hidden");
      });
      dialog.showModal();
    });
  });
  // handle dialog
  const closeButton = document.querySelector("dialog button");
  closeButton?.addEventListener("click", () => {
    dialog.close();
  });
  dialog.addEventListener("close", () => {
    img.removeAttribute("alt");
    img.removeAttribute("width");
    img.removeAttribute("height");

    img.removeAttribute("src");
    const loader = dialog.querySelector(".img-wrapper-dialog .loader");
    loader?.classList.remove("hidden");
  });
</script>

<style lang="postcss">
     .imageviewer {
    @apply bg-bg border-2 border-fg ;
   }
   .loader {
    transform: translate(-50%, -50%);
    position: absolute;
    top: 50%;
    left: 50%;
    width: 3em;
    height: 3em;
    border: 5px solid var(--c-fg);
    border-bottom-color: transparent;
    border-radius: 50%;
    box-sizing: border-box;
    animation: rotation 2s linear infinite;
  }
  .loader > .hidden {
    display: none;
  }
  @keyframes rotation {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  </style>
